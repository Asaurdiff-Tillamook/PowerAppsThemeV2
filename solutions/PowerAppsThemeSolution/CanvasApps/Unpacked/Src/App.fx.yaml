App As appinfo:
    BackEnabled: =false
    MinScreenHeight: =768
    MinScreenWidth: =1366
    OnStart: |
        =Concurrent(
        /*Check for PowerApps Admin group for Admin access */
        ClearCollect(
            colAdminUsers,
            Office365Groups.ListGroupMembers("5452b388-6fe8-4b7d-8fcb-21ac08e2e8f9").value.mail
        ),
        /* Run this for each screen onvisible property, if needed.  */
        ClearCollect(
            colLeftNav,
            {
                Item: "Home",
                Screen: Home_Page,
                Icon: Icon.Home,
                Tooltip: "Home",
                Permissions: If(
                    User().Email = "PowerPlatform@tillamok.com",
                    DisplayMode.Edit,
                    DisplayMode.Disabled
                )
            },
            {
                Item: "Settings",
                Screen: Settings_Screen,
                Icon: Icon.ToolsWrench,
                Tooltip: "Settings",
                Permissions: Blank()
            }
        ),
        /*App Heading */
        Set(
            varFooterLabel,
            Text(
                DateAdd(
                    Now(),
                    0,
                    Years
                ),
                "[$-en-US]mmm-yyyy"
            )
        ),
        //Replace for each page
        Set(
            varSubHeading,
            "Sub-Heading"
        ),
        //Set for full application Header
        Set(
            varHeading,
            "Theme Template"
        ),
        /*Reset Debug Mode */
        Set(
            IsDebugMode,
            false
        ),
        /*Check for darkmode from Power Apps Universal Settings */
        ClearCollect(
            AppSettingsCollection,
            Filter(
                PowerAppUniversal_settings,
                User().Email = Title
            )
        );
        /* set varDarkmode from collection above. Dependent on Collection. */
        If(
            First(AppSettingsCollection).IsDarkMode = "true",
            Set(
                varDarkMode,
                true
            ),
            Set(
                varDarkMode,
                false
            )
        );
        
        /* Create Colors, dependant on varDarkMode */
        Set(
            Colors,
            {
                Primary1: If(
                    varDarkMode = true,
                    RGBA(
                        255,
                        157,
                        25,
                        1
                    ),
                    RGBA(
                        0,
                        30,
                        96,
                        1
                    )
                ),
                // default (56, 96, 178, 1)
                Primary2: If(
                    varDarkMode = true,
                    RGBA(
                        0,
                        30,
                        96,
                        1
                    ),
                    RGBA(
                        255,
                        157,
                        25,
                        1
                    )
                ),
                // d (0, 18, 107, 1)
                Primary3: RGBA(
                    255,
                    252,
                    230,
                    1
                ),
                Primary4: If(
                    varDarkMode = true,
                    RGBA(
                        255,
                        252,
                        230,
                        1
                    ),
                    RGBA(
                        0,
                        30,
                        96,
                        1
                    )
                ),
                // d (186, 202, 226, 1)
                TextMain: If(
                    varDarkMode = true,
                    RGBA(
                        255,
                        157,
                        25,
                        1
                    ),
                    RGBA(
                        0,
                        30,
                        96,
                        1
                    )
                ),
                // d (0, 0, 0, 1)
                TextLink: RGBA(
                    0,
                    134,
                    208,
                    1
                ),
                // d (0, 134, 208, 1)
                Black: RGBA(
                    0,
                    0,
                    0,
                    1
                ),
                // d (0, 0, 0, 1)
                Gray: RGBA(
                    166,
                    166,
                    166,
                    1
                ),
                // d (166, 166, 166, 1)
                LightGray: RGBA(
                    245,
                    245,
                    245,
                    1
                ),
                // d (244, 244, 244, 1)
                White: If(
                    varDarkMode = true,
                    RGBA(
                        0,
                        30,
                        96,
                        1
                    ),
                    RGBA(
                        255,
                        255,
                        255,
                        1
                    )
                )// d (255, 255, 255, 1)
            }
        );
        /*KEEP Concurrent within Concurrent 4, but everything within is in one concurrent.
         Set up Icon and control colors and details. Dependant on Colors above. */
        Concurrent(
            Set(
                Input,
                {
                    BorderColor: Colors.Primary1,
                    // d Colors.Primary2
                    BorderThickness: 1,
                    // d 2
                    FocusedBorderThickness: 2,
                    // d 4
                    Color: Colors.TextMain// d Colors.Black
                }
            ),
            /* Set Button details.  */
            Set(
                Button,
                {
                    BorderDarkness: -5,
                    // colorfade percentage of fill color (d -15)
                    Radius: 10,
                    // d 10
                    DisabledPercent: 50,
                    // colorfade percentage of disabled border, color & fill (all buttons)
                    HoverPercent: -15,
                    // colorfade percentage of hover border & fill (all buttons but link)
                    HoverColorPercent: -25,
                    // colorfade percentage of hover color (only link & outline buttons)
                    PressedPercent: -20,
                    // colorfade percentage of pressed border & fill (all buttons but link & outline)
                    Color: Colors.Primary2,
                    // for default buttons (d Colors.White)
                    ColorSecondary: Colors.Primary2,
                    // for Secondary Text (Blue)
                    Fill: Colors.Primary1,
                    // for default buttons (d Colors.Primary1)
                    FillDanger: RGBA(
                        184,
                        0,
                        0,
                        1
                    ),
                    // for danger buttons
                    Width: 160,
                    // d 160
                    NavigationBackX: 1000,
                    NavigationBackY: 625,
                    NavigationNextX: 1180,
                    NavigationNextY: 625
                }
            ),
            /* Set Checkbox details. */
            Set(
                CheckboxRadio,
                {
                    BorderColor: Colors.Primary1,
                    // d Input.BorderColor
                    Fill: RGBA(
                        0,
                        0,
                        0,
                        0
                    )// d (0, 0, 0, 0)
                }
            ),
            Set(
                DataTable,
                {
                    HeadingBold: true,
                    // d false 
                    HeadingColorsInverted: true// d false
                }
            ),
            Set(
                Heading,
                {
                    Bold: FontWeight.Bold,
                    LineColor: Colors.Primary1,
                    LineHeight: 6,
                    LineWidth: 80,
                    Size1: 28,
                    Size2: 24,
                    Size3: 18,
                    Size4: 14
                }
            ),
            Set(
                Icons,
                {Color: Colors.Primary4// d Colors.Primary2
        }
            ),
            Set(
                Toggle,
                {
                    Fill: RGBA(
                        128,
                        130,
                        133,
                        1
                    )// d (128, 130, 133, 1)
                }
            )
        ),
        /* reset this as Home Page screen name, if needed. */
        ClearCollect(
            colTheMenu,
            {
                Item: "Home",
                Screen: Home_Page
            },
            {
                Item: "Input Controls",
                Screen: InputControls
            },
            {
                Item: "Basic Display Controls",
                Screen: BasicDisplayControls
            },
            {
                Item: "Graphic Controls",
                Screen: GraphicControls
            },
            {
                Item: "Headings & Buttons",
                Screen: 'Copy/Paste - Headings & Buttons'
            },
            {
                Item: "Access Information",
                Screen: Access_Screen
            },
            {
                Item: "Settings",
                Screen: Settings_Screen
            }
        );
        )

