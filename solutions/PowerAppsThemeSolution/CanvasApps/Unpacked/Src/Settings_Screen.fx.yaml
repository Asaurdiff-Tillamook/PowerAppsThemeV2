"Settings_Screen As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    OnVisible: |
        =Set(
            varSubHeading,
            "Settings Screen"
        );
        //Change this to the Object ID of group found in Azure & the Email of the distribution group. This will store in the ADMIN settings group change. 
        UpdateContext({varSidebarAppStatus: false, DistroGroup: {GroupID: "9927c6e8-e10e-47e6-bff2-264af995cc78",GroupUPN: "Tl1ShiftReports@tillamook.com"}});

    Canvas1_1 As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =App.Height-Header_2.Height-Footer_2.Height
        Width: =Parent.Width-LeftNav_2.Width
        X: =LeftNav_2.Width
        Y: =82
        ZIndex: =3

        DataCard2_1 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =If(ExpandAppSettings = true,DebugToggle_2.Y+DebugToggle_2.Height+20,Rectangle3.Height)
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =2

            Rectangle3 As rectangle:
                Fill: =Colors.Primary2
                Height: =62
                Width: =Parent.Width
                ZIndex: =1

            Label4 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Semibold
                Height: =62
                Size: =28
                Text: ="App Settings"
                Width: =Parent.Width
                ZIndex: =2

            Icon1 As icon.ChevronDown:
                Icon: =Icon.ChevronDown
                OnSelect: |-
                    =UpdateContext({ExpandAppSettings: false})
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =ExpandAppSettings
                ZIndex: =3

            Icon1_1 As icon.ChevronDown:
                Icon: =Icon.ChevronRight
                OnSelect: |-
                    =UpdateContext({ExpandAppSettings: true});
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =!ExpandAppSettings
                ZIndex: =4

            Label_Instructions_4 As label:
                Align: =Align.Center
                BorderColor: =Button.FillDanger
                BorderThickness: =2
                FontWeight: =FontWeight.Bold
                Height: =53
                PaddingLeft: =20
                PaddingRight: =5.86
                PaddingTop: =5.86
                Size: =16.40
                Text: ="Settings"
                Visible: =ExpandAppSettings
                Width: =749
                X: =28
                Y: =76
                ZIndex: =5

            DebugToggle_2 As toggleSwitch:
                AccessibleLabel: ="Debug Toggle"
                Default: =IsDebugMode
                OnSelect: =Set(IsDebugMode, Self.Value)
                Size: =16.40
                Tooltip: ="Debug Toggle"
                Visible: =ExpandAppSettings
                Width: =107.76
                X: =IsDebugLabel_1.Width+IsDebugLabel_1.X+5
                Y: =185
                ZIndex: =6

            IsDebugLabel_1 As label:
                PaddingRight: =5.86
                PaddingTop: =5.86
                Size: =16.40
                Text: |-
                    ="IsDebugMode:"
                Visible: =ExpandAppSettings
                Width: =226
                X: =28
                Y: =175
                ZIndex: =7

            DebugToggle_3 As toggleSwitch:
                AccessibleLabel: ="Debug Toggle"
                Default: =varDarkMode
                OnCheck: |-
                    =Set(varDarkMode,true);
                    Set(
                        Colors,
                        {
                            Primary1: If(varDarkMode=true,RGBA(
                                255,
                                157,
                                25,
                                1
                            ),RGBA(
                                0,
                                30,
                                96,
                                1
                            )),
                            // default (56, 96, 178, 1)
                            Primary2: If(varDarkMode=true,RGBA(
                                0,
                                30,
                                96,
                                1
                            ),RGBA(
                                255,
                                157,
                                25,
                                1
                            )),
                            // d (0, 18, 107, 1)
                            Primary3: RGBA(
                                255,
                                252,
                                230,
                                1
                            ),        Primary4: If(varDarkMode=true,RGBA(
                                255,
                                252,
                                230,
                                1
                            ),RGBA(
                                0,
                                30,
                                96,
                                1
                            )),
                            // d (186, 202, 226, 1)
                            TextMain: If(varDarkMode=true,RGBA(
                                255,
                                157,
                                25,
                                1
                            ),RGBA(
                                0,
                                30,
                                96,
                                1
                            )),
                            // d (0, 0, 0, 1)
                            TextLink: RGBA(
                                0,
                                134,
                                208,
                                1
                            ),
                            // d (0, 134, 208, 1)
                            Black: RGBA(
                                0,
                                0,
                                0,
                                1
                            ),
                            // d (0, 0, 0, 1)
                            Gray: RGBA(
                                166,
                                166,
                                166,
                                1
                            ),
                            // d (166, 166, 166, 1)
                            LightGray: RGBA(
                                245,
                                245,
                                245,
                                1
                            ),
                            // d (244, 244, 244, 1)
                            White: If(varDarkMode=true,RGBA(
                                0,
                                30,
                                96,
                                1
                            ),RGBA(
                                255,
                                255,
                                255,
                                1
                            ))// d (255, 255, 255, 1)
                        }
                    );
                    Concurrent(
                        Set(
                            Input,
                            {
                                BorderColor: Colors.Primary1,
                                // d Colors.Primary2
                                BorderThickness: 1,
                                // d 2
                                FocusedBorderThickness: 2,
                                // d 4
                                Color: Colors.TextMain// d Colors.Black
                            }
                        ),
                        Set(
                            Button,
                            {
                                BorderDarkness: -5,
                                // colorfade percentage of fill color (d -15)
                                Radius: 10,
                                // d 10
                                DisabledPercent: 50,
                                // colorfade percentage of disabled border, color & fill (all buttons)
                                HoverPercent: -15,
                                // colorfade percentage of hover border & fill (all buttons but link)
                                HoverColorPercent: -25,
                                // colorfade percentage of hover color (only link & outline buttons)
                                PressedPercent: -20,
                                // colorfade percentage of pressed border & fill (all buttons but link & outline)
                                Color: Colors.Primary2,
                                // for default buttons (d Colors.White)
                                ColorSecondary: Colors.Primary2,// for Secondary Text (Blue)
                                Fill: Colors.Primary1,
                                // for default buttons (d Colors.Primary1)
                                FillDanger: RGBA(
                                    184,
                                    0,
                                    0,
                                    1
                                ),
                                // for danger buttons
                                Width: 160,
                                // d 160
                                NavigationBackX: 1000,
                                NavigationBackY: 625,
                                NavigationNextX: 1180,
                                NavigationNextY: 625
                            }
                        ),
                        Set(
                            CheckboxRadio,
                            {
                                BorderColor: Colors.Primary1,
                                // d Input.BorderColor
                                Fill: RGBA(
                                    0,
                                    0,
                                    0,
                                    0
                                )// d (0, 0, 0, 0)
                            }
                        ),
                        Set(
                            DataTable,
                            {
                                HeadingBold: true,
                                // d false 
                                HeadingColorsInverted: true// d false
                            }
                        ),
                        Set(
                            Heading,
                            {
                                Bold: FontWeight.Bold,
                                LineColor: Colors.Primary1,
                                LineHeight: 6,
                                LineWidth: 80,
                                Size1: 28,
                                Size2: 24,
                                Size3: 18,
                                Size4: 14
                            }
                        ),
                        Set(
                            Icons,
                            {Color: Colors.Primary4// d Colors.Primary2
                    }
                        ),
                        Set(
                            Toggle,
                            {
                                Fill: RGBA(
                                    128,
                                    130,
                                    133,
                                    1
                                )// d (128, 130, 133, 1)
                            }
                        )
                    );
                    ClearCollect(
                        SampleCollection,
                        {
                            Name: "John",
                            Department: "Sales",
                            EmployeedSince: "2015"
                        },
                        {
                            Name: "Susan",
                            Department: "Marketing",
                            EmployeedSince: "2019"
                        },
                        {
                            Name: "Dave",
                            Department: "Finance",
                            EmployeedSince: "2012"
                        }
                    );
                    If(IsBlank(LookUp(PowerAppUniversal_settings,User().Email=Title)),Patch(PowerAppUniversal_settings,Defaults(PowerAppUniversal_settings),{Title: User().Email,IsDarkMode:varDarkMode}),Patch(PowerAppUniversal_settings,First(Filter(PowerAppUniversal_settings,Title=User().Email)),{IsDarkMode:varDarkMode}))
                OnSelect: =
                OnUncheck: |-
                    =Set(varDarkMode,false);
                    Set(
                        Colors,
                        {
                            Primary1: If(varDarkMode=true,RGBA(
                                255,
                                157,
                                25,
                                1
                            ),RGBA(
                                0,
                                30,
                                96,
                                1
                            )),
                            // default (56, 96, 178, 1)
                            Primary2: If(varDarkMode=true,RGBA(
                                0,
                                30,
                                96,
                                1
                            ),RGBA(
                                255,
                                157,
                                25,
                                1
                            )),
                            // d (0, 18, 107, 1)
                            Primary3: RGBA(
                                255,
                                252,
                                230,
                                1
                            ),        Primary4: If(varDarkMode=true,RGBA(
                                255,
                                252,
                                230,
                                1
                            ),RGBA(
                                0,
                                30,
                                96,
                                1
                            )),
                            // d (186, 202, 226, 1)
                            TextMain: If(varDarkMode=true,RGBA(
                                255,
                                157,
                                25,
                                1
                            ),RGBA(
                                0,
                                30,
                                96,
                                1
                            )),
                            // d (0, 0, 0, 1)
                            TextLink: RGBA(
                                0,
                                134,
                                208,
                                1
                            ),
                            // d (0, 134, 208, 1)
                            Black: RGBA(
                                0,
                                0,
                                0,
                                1
                            ),
                            // d (0, 0, 0, 1)
                            Gray: RGBA(
                                166,
                                166,
                                166,
                                1
                            ),
                            // d (166, 166, 166, 1)
                            LightGray: RGBA(
                                245,
                                245,
                                245,
                                1
                            ),
                            // d (244, 244, 244, 1)
                            White: If(varDarkMode=true,RGBA(
                                0,
                                30,
                                96,
                                1
                            ),RGBA(
                                255,
                                255,
                                255,
                                1
                            ))// d (255, 255, 255, 1)
                        }
                    );
                    Concurrent(
                        Set(
                            Input,
                            {
                                BorderColor: Colors.Primary1,
                                // d Colors.Primary2
                                BorderThickness: 1,
                                // d 2
                                FocusedBorderThickness: 2,
                                // d 4
                                Color: Colors.TextMain// d Colors.Black
                            }
                        ),
                        Set(
                            Button,
                            {
                                BorderDarkness: -5,
                                // colorfade percentage of fill color (d -15)
                                Radius: 10,
                                // d 10
                                DisabledPercent: 50,
                                // colorfade percentage of disabled border, color & fill (all buttons)
                                HoverPercent: -15,
                                // colorfade percentage of hover border & fill (all buttons but link)
                                HoverColorPercent: -25,
                                // colorfade percentage of hover color (only link & outline buttons)
                                PressedPercent: -20,
                                // colorfade percentage of pressed border & fill (all buttons but link & outline)
                                Color: Colors.Primary2,
                                // for default buttons (d Colors.White)
                                ColorSecondary: Colors.Primary2,// for Secondary Text (Blue)
                                Fill: Colors.Primary1,
                                // for default buttons (d Colors.Primary1)
                                FillDanger: RGBA(
                                    184,
                                    0,
                                    0,
                                    1
                                ),
                                // for danger buttons
                                Width: 160,
                                // d 160
                                NavigationBackX: 1000,
                                NavigationBackY: 625,
                                NavigationNextX: 1180,
                                NavigationNextY: 625
                            }
                        ),
                        Set(
                            CheckboxRadio,
                            {
                                BorderColor: Colors.Primary1,
                                // d Input.BorderColor
                                Fill: RGBA(
                                    0,
                                    0,
                                    0,
                                    0
                                )// d (0, 0, 0, 0)
                            }
                        ),
                        Set(
                            DataTable,
                            {
                                HeadingBold: true,
                                // d false 
                                HeadingColorsInverted: true// d false
                            }
                        ),
                        Set(
                            Heading,
                            {
                                Bold: FontWeight.Bold,
                                LineColor: Colors.Primary1,
                                LineHeight: 6,
                                LineWidth: 80,
                                Size1: 28,
                                Size2: 24,
                                Size3: 18,
                                Size4: 14
                            }
                        ),
                        Set(
                            Icons,
                            {Color: Colors.Primary4// d Colors.Primary2
                    }
                        ),
                        Set(
                            Toggle,
                            {
                                Fill: RGBA(
                                    128,
                                    130,
                                    133,
                                    1
                                )// d (128, 130, 133, 1)
                            }
                        )
                    );
                    ClearCollect(
                        SampleCollection,
                        {
                            Name: "John",
                            Department: "Sales",
                            EmployeedSince: "2015"
                        },
                        {
                            Name: "Susan",
                            Department: "Marketing",
                            EmployeedSince: "2019"
                        },
                        {
                            Name: "Dave",
                            Department: "Finance",
                            EmployeedSince: "2012"
                        }
                    );/*Update the Power Apps Universal Settings for the user*/
                    If(IsBlank(LookUp(PowerAppUniversal_settings,User().Email=Title)),Patch(PowerAppUniversal_settings,Defaults(PowerAppUniversal_settings),{Title: User().Email,IsDarkMode:varDarkMode}),Patch(PowerAppUniversal_settings,First(Filter(PowerAppUniversal_settings,Title=User().Email)),{IsDarkMode:varDarkMode}))
                Size: =16.40
                Tooltip: ="Debug Toggle"
                Visible: =ExpandAppSettings
                Width: =107.76
                X: =DarkModeLabel_1.Width+DarkModeLabel_1.X+5
                Y: =139
                ZIndex: =8

            DarkModeLabel_1 As label:
                PaddingRight: =5.86
                PaddingTop: =5.86
                Size: =16.40
                Text: |-
                    ="Dark Mode:"
                Visible: =ExpandAppSettings
                Width: =226
                X: =28
                Y: =135
                ZIndex: =9

            Label10 As label:
                BorderThickness: =5
                Height: =119
                Text: ="Suggest Copy/paste Headers and icons to new section. Rename in 'On select','Visible',and datacard.height the variable to Expand<section> format."
                Visible: =ExpandAppSettings
                Width: =372
                X: =882
                Y: =82
                ZIndex: =10

        DataCard3_1 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =If(ExpandFeedbackRequest = true,Label9.X+Label9.Height,Rectangle3_1.Height)
            Width: =Parent.Width
            X: =0
            Y: =1
            ZIndex: =3

            Rectangle3_1 As rectangle:
                Fill: =Colors.Primary2
                Height: =62
                Width: =Parent.Width
                ZIndex: =1

            Label4_1 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Semibold
                Height: =62
                Size: =28
                Text: ="Feedback Request"
                Width: =Parent.Width
                ZIndex: =2

            Icon1_2 As icon.ChevronDown:
                Icon: =Icon.ChevronDown
                OnSelect: |-
                    =UpdateContext({ExpandFeedbackRequest: false})
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =ExpandFeedbackRequest
                ZIndex: =3

            Icon1_3 As icon.ChevronDown:
                Icon: =Icon.ChevronRight
                OnSelect: |-
                    =UpdateContext({ExpandFeedbackRequest: true});
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =!ExpandFeedbackRequest
                ZIndex: =4

            Label6 As label:
                BorderThickness: =5
                FocusedBorderThickness: =5
                Height: =130
                Text: |-
                    ="<This is a placeholder for any communication you would like to place about the Feedback form> 
                    The Form button will need to be replaced with the Form link if its changed. Currently it is only the general feedback form. IF changed please create flow process for insertion and notification"
                Visible: =ExpandFeedbackRequest
                Width: =575
                X: =20
                Y: =80
                ZIndex: =5

            Icon2 As icon.DocumentwithContent:
                Icon: =Icon.DocumentWithContent
                OnSelect: |-
                    =Launch("https://forms.office.com/r/eaBCDWF9Be")
                Tooltip: ="Will open new tab for submission."
                Visible: =ExpandFeedbackRequest
                X: =624
                Y: =80
                ZIndex: =6

            Label9 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Semibold
                Height: =66
                Text: ="Feedback Requests"
                Visible: =ExpandFeedbackRequest
                Width: =110
                X: =604
                Y: =144
                ZIndex: =7

        DataCard4_1 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =If(ExpandAdminSettings=true,butSubmitChanges.Y+butSubmitChanges.Height+20,Label4_2.Y+Label4_2.Height)
            Width: =Parent.Width
            X: =0
            Y: =2
            ZIndex: =4

            Rectangle3_2 As rectangle:
                Fill: =Colors.Primary2
                Height: =62
                Width: =Parent.Width
                ZIndex: =1

            Label4_2 As label:
                Align: =Align.Center
                FontWeight: =FontWeight.Semibold
                Height: =62
                Size: =28
                Text: ="Admin Settings"
                Width: =Parent.Width
                ZIndex: =2

            Icon1_4 As icon.ChevronDown:
                Icon: =Icon.ChevronDown
                OnSelect: |-
                    =UpdateContext({ExpandAdminSettings: false})
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =ExpandAdminSettings
                ZIndex: =3

            Icon1_5 As icon.ChevronDown:
                Icon: =Icon.ChevronRight
                OnSelect: |-
                    =UpdateContext({ExpandAdminSettings: true});
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =!ExpandAdminSettings
                ZIndex: =4

            Label11 As label:
                Align: =Align.Center
                BorderThickness: =5
                FontWeight: =FontWeight.Bold
                Height: =45
                Size: =16
                Text: ="Title of distribution group to manage"
                Visible: =ExpandAdminSettings
                Width: =642
                X: =32
                Y: =84
                ZIndex: =5

            Label11_1 As label:
                Align: =Align.Center
                BorderThickness: =3
                FontWeight: =FontWeight.Semibold
                Height: =312
                Italic: =true
                Size: =16
                Text: |-
                    ="This is where you will describe the function of this section. Manageing distribution group or groups and tailor it to your app and its function.
                    Default is Tillamook shift reports. Change if needed. "
                VerticalAlign: =VerticalAlign.Top
                Visible: =ExpandAdminSettings
                Width: =642
                X: =32
                Y: =129
                ZIndex: =6

            Label11_2 As label:
                Align: =Align.Center
                BorderThickness: =5
                FontWeight: =FontWeight.Bold
                Size: =16
                Text: ="Display Name"
                Visible: =ExpandAdminSettings
                Width: =192
                X: =830
                Y: =84
                ZIndex: =7

            Label11_3 As label:
                Align: =Align.Center
                BorderThickness: =5
                FontWeight: =FontWeight.Bold
                Size: =16
                Text: ="Email"
                Visible: =ExpandAdminSettings
                Width: =417
                X: =1022
                Y: =84
                ZIndex: =8

            Gallery3 As gallery.galleryVertical:
                BorderThickness: =5
                Height: =If(addUsers = true,Parent.Height-Self.Y-(Parent.Height-AddUserToDistro.Y+10),  Parent.Height - Self.Y- (Parent.Height-butSubmitChanges.Y+20))
                Items: |-
                    =Office365Groups.ListGroupMembers(DistroGroup.GroupID,{'$top':20}).value
                Layout: =Layout.Vertical
                TemplateSize: =Rectangle4.Y+Rectangle4.Height+5
                Visible: =ExpandAdminSettings
                Width: =682
                X: =830
                Y: =124
                ZIndex: =9

                Rectangle4_1 As rectangle:
                    Fill: =ColorFade(Colors.Primary1,70%)
                    Height: =Label12_1.Height
                    OnSelect: =Select(Parent)
                    Width: =Label12_1.Width
                    X: =Label12_1.X+5
                    Y: =Label12_1.Y+5
                    ZIndex: =1

                Rectangle4 As rectangle:
                    Fill: =ColorFade(Colors.Primary1,70%)
                    Height: =Label12.Height
                    OnSelect: =Select(Parent)
                    Width: =Label12.Width
                    X: =Label12.X+5
                    Y: =Label12.Y+5
                    ZIndex: =2

                Label12 As label:
                    Fill: =ColorFade(Colors.Primary1,90%)
                    OnSelect: =Select(Parent)
                    Text: =ThisItem.displayName
                    Width: =180
                    ZIndex: =3

                Label12_1 As label:
                    Fill: =ColorFade(Colors.Primary1,90%)
                    OnSelect: =Select(Parent)
                    Text: =ThisItem.userPrincipalName
                    Width: =416
                    X: =192
                    ZIndex: =4

                Rectangle5 As rectangle:
                    Fill: |-
                        =RGBA(
                                        0,
                                        30,
                                        96,
                                        .4
                                    )
                    Height: =Parent.TemplateHeight
                    OnSelect: =Select(Parent)
                    Visible: =If(ThisItem in colUsersToRemove,true,false)
                    Width: =Parent.TemplateWidth
                    ZIndex: =5

                Icon3 As icon.Trash:
                    Height: =40
                    Icon: =If(ThisItem in colUsersToRemove,Icon.Add,  Icon.Trash)
                    OnSelect: =If(ThisItem in colUsersToRemove,Remove(colUsersToRemove,ThisItem),Collect(colUsersToRemove,ThisItem););
                    PaddingBottom: =5
                    PaddingLeft: =5
                    PaddingRight: =5
                    PaddingTop: =5
                    X: =608
                    ZIndex: =6

            butSubmitChanges As button:
                DisplayMode: |-
                    =If(
                        Or(
                            !IsEmpty(colUsersToRemove),
                            !IsEmpty(AddUserToDistro.SelectedItems) && !IsBlank(AddUserToDistro.SelectedItems)
                        ),
                        DisplayMode.Edit,
                        DisplayMode.Disabled
                    )
                Height: =41
                OnSelect: |
                    =//need to run through the combobox and collect users selected to store for a foreach to add users to the SPO list. 
                    //Create batch ID so the list batches the content to the flow to process all data. reduces runtime on the runbook. 
                    UpdateContext(
                        {
                            _BatID: Text(
                                Last(
                                    Sort(
                                        'SecurityGroup-ActivityLogs',
                                        Descending
                                    )
                                ).'BAT#' + 1,
                                "[$-en-US]000000#"
                            )
                        }
                    );
                    //Create BATNumber from ID
                    UpdateContext(
                        {
                            _BatNumber: Concatenate(
                                "BAT",
                                _BatID
                            )
                        }
                    );
                    // Need to pull any removals if needed then pull all additions. 
                    If(
                        !IsBlank(colUsersToRemove) || !IsEmpty(colUsersToRemove),
                        ForAll(
                            colUsersToRemove As _UsersToRemove,
                            Patch(
                                'SecurityGroup-ActivityLogs',
                                Defaults('SecurityGroup-ActivityLogs'),
                                {
                                    Request_Source: App.ActiveScreen.Name,
                                    GroupId: DistroGroup.GroupID,
                                    GroupUPN: DistroGroup.GroupUPN,
                                    Group_MailEnabled: true,
                                    Group_SecurityEnabled: false,
                                    GroupType: {Value: "Distribution"},
                                    UserToRemove_DisplayName: _UsersToRemove.displayName,
                                    UserToRemove_UPN: _UsersToRemove.userPrincipalName,
                                    UserToRemove_ID: _UsersToRemove.id,
                                    UserRequesting_DisplayName: User().FullName,
                                    UserRequesting_UPN: User().Email,
                                    Request_Status: {Value: "Requested"},
                                    BatchNumber: _BatNumber,
                                    'BAT#': _BatID
                                }
                            )
                        );
                        Notify(
                            "Your submission for removal has been submitted. This process can take up to 30 minutes to perform and up to 24 hours to reflect in the address book.",
                            NotificationType.Success,
                            30000
                        );
                        
                    );
                    //run if there is data within the combobox
                    If(
                        !IsBlank(AddUserToDistro.SelectedItems) || !IsEmpty(AddUserToDistro.SelectedItems),
                    //need to manually enter in the appropriate data for the group Tillamook - Shift Reports
                        ForAll(
                            AddUserToDistro.SelectedItems As _UsersToAdd,
                            Patch(
                                'SecurityGroup-ActivityLogs',
                                Defaults('SecurityGroup-ActivityLogs'),
                                {
                                    Request_Source: App.ActiveScreen.Name,
                                    // screen utilized for auditing purpose
                                    GroupId: DistroGroup.GroupID,
                                    //GroupID for the shift reports distro
                                    GroupUPN: DistroGroup.GroupUPN,
                                    //Email Address for it
                                    Group_MailEnabled: true,
                                    //Security setting that is required for the SPO list
                                    Group_SecurityEnabled: false,
                                    //Security setting that is required for the SPO list
                                    GroupType: {Value: "Distribution"},
                                    // this is a known value other options: Security,Microsoft 365, & Mail-Enabled Security
                                    UserToAdd_DisplayName: _UsersToAdd.DisplayName,
                                    // The rest is pulled from the combobox search users data
                                    UserToAdd_UPN: _UsersToAdd.UserPrincipalName,
                                    UserToAdd_ID: _UsersToAdd.Id,
                                    UserRequesting_DisplayName: User().FullName,
                                    UserRequesting_UPN: User().Email,
                                    Request_Status: {Value: "Requested"},
                                    // Status to trigger the flow
                                    BatchNumber: _BatNumber,
                                    //batch details so they can run ALL requests at once. Reduces Runbook time. 
                                    'BAT#': _BatID
                                }
                            )
                        );
                        
                    );
                    Reset(AddUserToDistro);
                    Notify(
                        "Your submission was a success! You will receive an email once the process has finished. Once received, select the 'Refresh' icon to see updated list.",
                        NotificationType.Success,
                        30000
                    );
                    Select(butClearChanges);
                Text: ="Submit Changes"
                Visible: =ExpandAdminSettings
                Width: =181
                X: =1331
                Y: =421
                ZIndex: =10

            butClearChanges As button:
                DisplayMode: |-
                    =If(
                        Or(
                            !IsEmpty(colUsersToRemove),
                            !IsEmpty(AddUserToDistro.SelectedItems) && !IsBlank(AddUserToDistro.SelectedItems)
                        ),
                        DisplayMode.Edit,
                        DisplayMode.Disabled
                    )
                Height: =41
                OnSelect: |-
                    =Clear(colUsersToRemove);Reset(AddUserToDistro);UpdateContext({_BatID:Blank(),_BatNumber: Blank(),addUsers:Blank()}); 
                Text: ="ClearChanges"
                Visible: =ExpandAdminSettings
                Width: =181
                X: =830
                Y: =421
                ZIndex: =11

            Icon9 As icon.Add:
                Height: =42
                Icon: =If(addUsers = true,Icon.CancelBadge,  Icon.Add)
                OnSelect: |-
                    =If(addUsers = true,UpdateContext({addUsers: false}); Reset(AddUserToDistro);,UpdateContext({addUsers: true}))
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =ExpandAdminSettings
                Width: =73
                X: =1439
                Y: =87
                ZIndex: =12

            AddUserToDistro As combobox:
                DisplayFields: =["DisplayName","JobTitle"]
                InputTextPlaceholder: ="Search user by Name..."
                Items: |-
                    =Office365Users.SearchUser({searchTerm:Self.SearchText,top:20})
                SearchFields: =["DisplayName"]
                SearchItems: |-
                    =Search(Office365Users.SearchUser({searchTerm:Self.SearchText,top:20}),AddUserToDistro.SearchText,"DisplayName")
                Template: =ListItemTemplate.Person
                Visible: =If( addUsers = true,ExpandAdminSettings,addUsers)
                X: =1184
                Y: =366
                ZIndex: =13

            Label13 As label:
                Text: |-
                    ="Find users to add to distribution list:"
                Visible: =If( addUsers = true,ExpandAdminSettings,addUsers)
                Width: =354
                X: =830
                Y: =366
                ZIndex: =14

        DataCard5_1 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =100
            Width: =Parent.Width
            X: =0
            Y: =3
            ZIndex: =5

        DataCard6_1 As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =100
            Width: =Parent.Width
            X: =0
            Y: =4
            ZIndex: =6

    Footer_2 As Footer:
        Y: =App.Height-Self.Height
        ZIndex: =4

    Header_2 As Header:
        ZIndex: =5

    LeftNav_2 As LeftNav:
        Y: =Header_2.Height
        ZIndex: =6

    Menu_2 As Menu:
        X: =App.Width-Self.Width
        ZIndex: =7

